https://losst.pro/42-komandy-linux-kotorye-vy-dolzhny-znat

pwd 		посмотреть где я

ls 		вывести список содержимого папки в которой находишься

ls -l 		вывести список содержимого папки в которой находишься с доп инфой(дата,размер и т.д.)

ls -a 		вывести список содержимого папки в которой находишься со скрытыми папками

ls -la 		вывести список содержимого папки в которой находишься со скрытыми папками и с доп инфой(дата,размер и т.д.)
adm_stf@AcerPC1 MINGW64 ~/Desktop/KHALILOV/SQA
$ ls -a

 ./		указание на ту дерикторию где находимся(~/Desktop/KHALILOV/SQA)
 ../		указание на родительскую директорию, т.е. уровень выше(~/Desktop/KHALILOV/)

cd .. 		перейти в папку на уровень выше(~/Desktop/KHALILOV/)

cd SQA/ 	перейти в папку SQA/(~/Desktop/KHALILOV/SQA(если нажать TAB после набора первых символов, то название подставится автоматически))

mkdir DIR1 	cоздать папку с именем DIR1 в текущей папке ~/Desktop/KHALILOV/SQA

mkdir dir1_1 dir1_2 dir1_3	создать 3 папки в текущей папке ~/Desktop/KHALILOV/SQA/DIR1-для создания нескольких папок за раз, то названия папок указываем через пробел

mkdir dir1_1/dir1_1_1	cоздать папку с именем dir1_1_1 в другой папке(НЕ текущей) ~/Desktop/KHALILOV/SQA/DIR1/dir1_1

ls -la dir1_1	показать содержимое папки(dir1_1), которая находится внутри другой папки(DIR1)

rm -r dir1_2	удаление папки dir1_2 при нахождении в текущей папке DIR1

rm -r dir1_1/dir1_1_1/	 удаление папки dir1_1_1 которая находится в другой папке(dir1_1) при нахождении в DIR1

clear	"очистит" экран терминала

touch 1.txt	создать файл 1.txt в текущей папке, чтобы в имени были пробелы "New Text Document.txt" необходимо в названии между словами указывать обратный слэшь New\ Text\ Document.txt. Если в названии файла есть спецсимволы, то их экранировать через одинарные кавычки, например файл с названием Linux terminal (Gitbash) commands.txt передавать как Linux\ terminal\ '(Gitbash)'\ commands.txt

cat >2.txt	создать(затереть данные в) файл 2.txt в текущей папке c содержимым внутри, режим редактирования(123 456 789(ctrl+c выход))
123
456
789

cat 2.txt	показать содержимое файла 2.txt в текущей папке

cat dir1_1/copy_2.txt	показать содержимое файла copy_2.txt в папке dir1_1

cat >>2.txt	добавит новое содержимое в конец текущего в файле 2.txt(qwe asd)
qwe
asd

cat 666.json copy_2.txt	отобразит поочередно содержимое файлов 666.json и copy_2.txt

cat -n 666.json	покажет и пронумерует строки содержимого файла 666.json

rm 1.txt	удаление файла 1.txt в текущей папке

rm dir1_3/move_2.txt	удаление файла move_2.txt из папки dir1_3

cp 2.txt	dir1_1	копирование файла 2.txt из текущей папки в папку dir1_1(папка dir1_1 должна находиться в текущей папке)

cp 2.txt dir1_1/copy_2.txt	копирование файла 2.txt из текущей папки в папку dir1_1 с новым именем файла copy_2.txt(папка dir1_1 должна находиться в текущей папке)

cp 2.txt ..q	копирование файла 2.txt из текущей папки в папку на уровень выше

mv 2.txt 666.txt	переименовать файл 2.txt в 666.txt в текущей папке

mv 2.txt dir1_3	переместить файл 2.txt из текущей папки в папку dir1_3

mv 2.txt dir1_3/move_2.txt	переместить файл 2.txt из текущей папки в папку dir1_3 и переименовать его в move_2.txt

mv 2.txt ..	переместить файл 2.txt из текущей папки в папку на уровень выше

mv dir1_2/copy_2.txt ..	переместить файл copy_2.txt в папку выше SQA находясь в папке DIR1(/Desktop/KHALILOV/SQA/DIR1)

mv dir1_3/{3.txt,file3.txt} .	переместит 2 файла 3.txt,file3.txt из дочерней папки dir1_3 в текущую .(точка-текущая)

mv xxx/ Terminal/	переместит папку xxx в папку Terminal

vim		запустить редактор vim, чтобы печатать нажми i. Выйти из режима редактирования с сохранением данных нажать ESC затем Shift+: и пишем wq "название файла" (wq 666.txt) или x

vim 666.txt	открывает файл 666.txt в редакторе vim

explorer	запускает explorer

find . -maxdepth 1 -name "*.txt"	найдет/отобразит все файлы с расширением .txt в текущей папке (.) без вложенных папок (-maxdepth 1)

head -v -n 3 666.json	покажет первые 3 строки в файле 666.json(-v покажет название файла)

tail -f -n 4 dir1_3/3.txt	покажет последние 4 строки в файле 3.txt из папки dir1_3 с обновлением информации по мере появления новых строк в файле

grep -C1 -i -n "hus" 666.json	выводит по 1 строке сверху и снизу (-С1) с вхождением hus без учета регистра (-i)  с указанием номеров строки в файле
6-   "name":"Pavel",
7:   "type":"husband"
8-   }

less -N ../Linux\ terminal\ \(GitBash\)\ commands.txt	просмотр длинного файла commands.txt с указанием номеров строк -N(нажать q чтобы выйти из режима просмотраq)

date	выводит текущее время, по умолчанию формат Tue Feb  7 17:11:16 EST 2023. 
date +"%H:%M:%S %W %w %h %m"	%H-часы 24Н, %M-минуты,%S-секунды, %W-номер недели в году,%w-номер недели в месяце,%h-месяц буквами,%m-месяц цифрами
17:22:56 06 2 Feb 02

git clone https://github.com/tatarin555/Terminal.git	клонирует созданный на гитхабе репозиторий в локальную текущую папку, "https://github.com/tatarin555/Terminal.git" берется из самого репозитория на гитхабе из кнопки Code(HTTPS/SSH/GitHub CLI)

git add, git commit -m, git push	последовательность комманд для отправки локальных файлов во внешний репозиторий на гитхаб

загуглить ошибку
$ git add terminal_lesson_1.txt
warning: in the working copy of 'terminal_lesson_1.txt', LF will be replaced by CRLF the next time Git touches it

git add terminal_lesson_1.txt	добавляет указанные файлы для последующего коммита, если вместо файлов указать "." ,то добавится вся папка целиком

git status	показывает текуший статус гита, если есть ошибки/обновления то покажет рекомендации

git commit -m "linux commands 1"	отправляет коммит на внешний репозиторий на гитхаб, того что было добавлено в команде git add,  "linux commands 1" - произвольное имя

git commit -am "123"	совмещает команды git add и git commit в одной, только для тех файлов, которые уже хоть раз были закомитчены

Author identity unknown	если данная ошибка, то выполняем последовательно команды git config --global user.email "you@example.com" и git config --global user.name "Your Name", где user.email емейл который зареган на гитхабе(tatarin.work.usa@gmail.com) и user.name имя аккаунта(tatarin555)
*** Please tell me who you are.
Run
  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

git config --global user.email "tatarin.work.usa@gmail.com"
git config --global user.name "tatarin555"

git push	отправляет в репозиторий гитхаба всё что было закомитчено и добавлено в команде git add

если нужно удалить какой-то файл с репозитория, то можно сделать клон репозитория(git clone), локально удалить файл(rm) и все скомитить на гитхаб (git add, git commit -m, git push)

git pull	синхронизирует изменения с внешнего репозитория на гитхабе в локальную папку (внутренний)

git rm HW_history.txt	удаляет файл HW_history.txt с гитхаба, обязательно сделать git commit и push

git branch	показываает все существующие ветки и подсвечивает текущую

git branch SQL	создает в текущей дополнительную ветку с названием SQL

git checkout SQL	переход из текущей ветки в ветку SQL

git push -u origin Jmeter SQL	пушит ветки Jmeter и SQL в главную ветку main на внешний репозиторий гитхаб

git merge BagReports	вмержил ветку BagReports в ветку main. для этого предварительно нужно перейти в ветку main. При этом на внешнем репозитории ничего не произойдет пока не сделать git push.

